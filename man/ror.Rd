% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/disprop_analysis.R,
%   R/lower_level_disprop_analysis.R
\name{ror}
\alias{ror}
\title{Reporting Odds Ratio}
\usage{
ror(a, b, c, d, sign_lvl = 0.95)

ror(a, b, c, d, sign_lvl = 0.95)
}
\arguments{
\item{a}{Number of reports for the specific drug and event (i.e. the
observed count).}

\item{b}{Number of reports with the drug, without the event}

\item{c}{Number of reports without the drug, with the event}

\item{d}{Number of reports without the drug, without the event}

\item{sign_lvl}{Significance level of confidence interval. Default is
0.95 (i.e. 95 \% confidence interval)}
}
\value{
A tibble with three columns (point estimate and credibility bounds).
Number of rows equals length of inputs a, b, c, d.

A tibble with three columns (point estimate and credibility bounds).
Number of rows equals length of inputs a, b, c, d.
}
\description{
Calculates Reporting Odds Ratio ("ROR") and confidence
intervals, used in disproportionality analysis.

Calculates Reporting Odds Ratio ("ROR") and confidence
intervals, used in disproportionality analysis.
}
\details{
The ROR is an odds ratio calculated from reporting counts. The
R for Reporting in ROR is meant to emphasize an interpretation of reporting,
as the ROR is calculated from a reporting database. Note: the function is
vectorized, i.e. a, b, c and d can be vectors, see the examples.

The ROR is an odds ratio calculated from reporting counts. The
R for Reporting in ROR is meant to emphasize an interpretation of reporting,
as the ROR is calculated from a reporting database. Note: the function is
vectorized, i.e. a, b, c and d can be vectors, see the examples.
}
\examples{

pvutils::ror(a = 5, b = 10, c = 20, d = 10000)

# Note that a, b, c and d can be vectors (of equal length, no recycling)
pvutils::ror(a = c(5, 10), b = c(10, 20), c = c(15, 30), d = c(10000, 10000))

pvutils::ror(a = 5, b = 10, c = 20, d = 10000)

# Note that a, b, c and d can be vectors (of equal length, no recycling)
pvutils::ror(a = c(5, 10), b = c(10, 20), c = c(15, 30), d = c(10000, 10000))
}
