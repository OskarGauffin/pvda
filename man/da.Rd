% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/higher_level_disprop_analysis.R
\name{da}
\alias{da}
\title{Disproportionality Analysis}
\usage{
da(
  df,
  da_estimators = c("ic", "prr", "ror"),
  group_by = NULL,
  rule_of_N = 3,
  sign_lvl = 0.95,
  number_of_digits = 2,
  write_path = NULL
)
}
\arguments{
\item{df}{A data table, or an object possible to convert to a data table, e.g.
a tibble or data.frame. For column specifications, see details.}

\item{da_estimators}{Character vector, defaults to c("ic", "prr", "ror").}

\item{group_by}{Provide a string with the name of a grouping variable in `df`
to perform subgroup analyses (i.e. run disproportionality analysis within each group).
Passing NULL, the default, uses all data in df as a single group.}

\item{rule_of_N}{Numeric. To protect against spurious
associations due to small observed counts, prr and ror point and
interval estimates are set to NA when the observed is less or equal to
the value passed as 'rule_of_N'. Defaults to 3, but 5 is sometimes used.
Set to NULL if you don't want to apply any such rule.}

\item{sign_lvl}{Significance level of confidence or credibility intervals.
Default is 0.95 (i.e. 95 \% confidence interval)}

\item{number_of_digits}{Set the number of digits to show in output by passing
an integer. Default value is 2 digits. Set to NULL to avoid rounding.}

\item{write_path}{If you don't want to write the output to an excel file,
pass the default value, NULL. To write to excel, provide a path to a folder
e.g. to write to your current working directory, pass `getwd()`.
The excel file will by default be named `da.xlsx`. To change the excel file name,
pass a path ending with the specific filename suffixed with `.xlsx`.}
}
\value{
Returns a data frame invisibly containing counts and estimates related to
supported disproportionality estimators.
}
\description{
Execute a disproportionality analysis
}
\examples{
da_1 <- drug_event_df |> pvutils::da()

# Split df into two groups (even/uneven report_ids)
drug_event_df_with_grouping  <- drug_event_df |>
dplyr::mutate("group" = report_id \%\% 2)
da_1 <- drug_event_df_with_grouping |> pvutils::da(group_by = "group")
}
\seealso{
\code{\link[pvutils]{add_expected_counts}}, \code{\link[pvutils]{add_disproportionality}}
}
