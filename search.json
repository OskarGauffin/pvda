[{"path":"https://oskargauffin.github.io/pvutils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 pvutils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://oskargauffin.github.io/pvutils/articles/Disproportionality_analysis.html","id":"disproportionality-analysis-for-a-specific-drug-event-combination","dir":"Articles","previous_headings":"","what":"Disproportionality analysis for a specific drug-event combination","title":"Disproportionality_analysis","text":"first use-case functions provide way calculate confidence credibility intervals specific drug-event-combination, already know number observed reports, required counts database total count, number reports exposure number reports event. details specific input parameters, consult documentation function.","code":"library(pvutils) ## Under development. Report issues at https://github.com/OskarGauffin/pvutils prr(obs = 10, n_drug = 1000, n_event_prr = 200, n_tot_prr = 10000) ## # A tibble: 1 × 3 ##   prr_lower    prr prr_upper ##       <dbl>  <dbl>     <dbl> ## 1     0.264 0.0002     0.947 ror(a = 10, b = 20, c = 200, d = 10000) ## # A tibble: 1 × 3 ##   ror_lower   ror ror_upper ##       <dbl> <dbl>     <dbl> ## 1      11.6    25      54.1 ic(obs = 10, exp = 5) ## # A tibble: 1 × 3 ##   ic_lower    ic ic_upper ##      <dbl> <dbl>    <dbl> ## 1  -0.0973 0.933     1.69"},{"path":"https://oskargauffin.github.io/pvutils/articles/Disproportionality_analysis.html","id":"disproportionality-analysis-from-report-level-data","dir":"Articles","previous_headings":"","what":"Disproportionality analysis from report-level data","title":"Disproportionality_analysis","text":"aim screen wide range drug-event pairs report-level data using disproportionality analysis, handled function da. pvutils package contains simulated data set ‘drug_event_df’. simplicity, drugs named Drug_A - Drug_Z, events named Event_1 - Event_1000. details proportions drug event described data object (execute ?df_drug_event). pass data function calculates expected counts, function adds columns contaning disproportionality. now step steps detail.","code":"drug_event_df |>   add_expected_counts() |>   add_disproportionality() ## # A tibble: 1,279 × 23 ##    drug   event   obs n_drug n_event n_tot exp_rrr n_eve…¹ n_tot…² exp_prr     b ##    <chr>  <chr> <int>  <int>   <int> <int>   <dbl>   <int>   <int>   <dbl> <int> ##  1 Drug_A Even…    21    359     174  1000    62.5     153     641    85.7   338 ##  2 Drug_A Even…    21    359     155  1000    55.6     134     641    75.0   338 ##  3 Drug_C Even…    21    298     174  1000    51.9     153     702    64.9   277 ##  4 Drug_E Even…    21    279     186  1000    51.9     165     721    63.8   258 ##  5 Drug_D Even…    20    275     163  1000    44.8     143     725    54.2   255 ##  6 Drug_A Even…    19    359     186  1000    66.8     167     641    93.5   340 ##  7 Drug_A Even…    19    359     138  1000    49.5     119     641    66.6   340 ##  8 Drug_C Even…    19    298     163  1000    48.6     144     702    61.1   279 ##  9 Drug_E Even…    19    279     138  1000    38.5     119     721    46.0   260 ## 10 Drug_A Even…    18    359     163  1000    58.5     145     641    81.2   341 ## # … with 1,269 more rows, 12 more variables: c <int>, d <int>, exp_ror <dbl>, ## #   ic_lower <dbl>, ic <dbl>, ic_upper <dbl>, prr_lower <dbl>, prr <dbl>, ## #   prr_upper <dbl>, ror_lower <dbl>, ror <dbl>, ror_upper <dbl>, and ## #   abbreviated variable names ¹​n_event_prr, ²​n_tot_prr"},{"path":"https://oskargauffin.github.io/pvutils/articles/Disproportionality_analysis.html","id":"passing-a-correctly-structured-input-data","dir":"Articles","previous_headings":"Disproportionality analysis from report-level data","what":"Passing a correctly structured input data","title":"Disproportionality_analysis","text":"important report-level data structured correctly. Every line passed data frame corresponds drug-event pair report. drug_event_df-example data, first three rows drug_event_df report, report_id = 1. first row reports Drug_D adverse event named Event_5.next three rows another report, instance drug B reported two different events, event 15 event 33. completeness, note drug-event pair occurs several times one report, drug-event pair contributes counts . , observed count five means five different reports containing drug-event-pair, e.g. single report contained drug-event pair five times.","code":"drug_event_df[1:6, ] ## # A tibble: 6 × 3 ##   report_id drug   event    ##       <int> <chr>  <chr>    ## 1         1 Drug_D Event_5  ## 2         1 Drug_G Event_56 ## 3         1 Drug_O Event_89 ## 4         2 Drug_A Event_33 ## 5         2 Drug_B Event_15 ## 6         2 Drug_B Event_28"},{"path":"https://oskargauffin.github.io/pvutils/articles/Disproportionality_analysis.html","id":"counting-the-expected","dir":"Articles","previous_headings":"Disproportionality analysis from report-level data","what":"Counting the expected","title":"Disproportionality_analysis","text":"details PRR, RRR IC documented within function, overall one can note expected counts derived contingency table (including marginal sums) drug, adverse event respectively. add_expected_counts-function single parameter, expected_count_estimators can used turn calculation expected counts specific estimators. Note IC tradition uses expected counts referred Relative Reporting Rate (RRR).","code":"drug_event_df |>   add_expected_counts(expected_count_estimators = c(\"prr\", \"ror\", \"rrr\")) |>   head(1) ## # A tibble: 1 × 14 ##   drug   event    obs n_drug n_event n_tot exp_rrr n_eve…¹ n_tot…² exp_prr     b ##   <chr>  <chr>  <int>  <int>   <int> <int>   <dbl>   <int>   <int>   <dbl> <int> ## 1 Drug_A Event…    21    359     174  1000    62.5     153     641    85.7   338 ## # … with 3 more variables: c <int>, d <int>, exp_ror <dbl>, and abbreviated ## #   variable names ¹​n_event_prr, ²​n_tot_prr"},{"path":"https://oskargauffin.github.io/pvutils/articles/Disproportionality_analysis.html","id":"adding-the-disproportionality-estimators","dir":"Articles","previous_headings":"Disproportionality analysis from report-level data","what":"Adding the disproportionality estimators","title":"Disproportionality_analysis","text":"add_disproportionality function da_estimator parameter, default includes IC, PRR ROR. subset preferred, just pass desired estimators lower case letters. add_disproportionality function two parameters. One rule_of_N, default set 3, sometimes referred “rule three”. sets ROR PRR-values NA observed count less specified N. completeness, note default shrinkage IC acts built ‘rule 3’, .e. shrinkage +0.5 prevents lower bound exceed 0 default significance level 95%. second parameter number_of_digits controls rounding non-count values output, including expected counts, uncertainty bounds point estimates. default 2 digits kept. short, add_disproportionality wrapper around ror, prr ic. details around estimators, see documentation corresponding function.","code":"## # A tibble: 1,279 × 23 ##    drug   event   obs n_drug n_event n_tot exp_rrr n_eve…¹ n_tot…² exp_prr     b ##    <chr>  <chr> <int>  <int>   <int> <int>   <dbl>   <int>   <int>   <dbl> <int> ##  1 Drug_A Even…    21    359     174  1000    62.5     153     641    85.7   338 ##  2 Drug_A Even…    21    359     155  1000    55.6     134     641    75.0   338 ##  3 Drug_C Even…    21    298     174  1000    51.9     153     702    64.9   277 ##  4 Drug_E Even…    21    279     186  1000    51.9     165     721    63.8   258 ##  5 Drug_D Even…    20    275     163  1000    44.8     143     725    54.2   255 ##  6 Drug_A Even…    19    359     186  1000    66.8     167     641    93.5   340 ##  7 Drug_A Even…    19    359     138  1000    49.5     119     641    66.6   340 ##  8 Drug_C Even…    19    298     163  1000    48.6     144     702    61.1   279 ##  9 Drug_E Even…    19    279     138  1000    38.5     119     721    46.0   260 ## 10 Drug_A Even…    18    359     163  1000    58.5     145     641    81.2   341 ## # … with 1,269 more rows, 12 more variables: c <int>, d <int>, exp_ror <dbl>, ## #   ic_lower <dbl>, ic <dbl>, ic_upper <dbl>, prr_lower <dbl>, prr <dbl>, ## #   prr_upper <dbl>, ror_lower <dbl>, ror <dbl>, ror_upper <dbl>, and ## #   abbreviated variable names ¹​n_event_prr, ²​n_tot_prr"},{"path":"https://oskargauffin.github.io/pvutils/articles/Disproportionality_analysis.html","id":"subgroup-analysis","dir":"Articles","previous_headings":"","what":"Subgroup analysis","title":"Disproportionality_analysis","text":"disproportionality builds comparator passed data, subgroup analysis e.g. specific age groups achieved filtering group interest, passing da.","code":""},{"path":"https://oskargauffin.github.io/pvutils/articles/Disproportionality_analysis.html","id":"execution-speed","dir":"Articles","previous_headings":"","what":"Execution speed","title":"Disproportionality_analysis","text":"data.table-package (dtplyr) used fast execution. test execution speed made using vaers R package, available gitlab. vaers package contains data VAERS years 1990 - 2018, resulting 4 146 778 rows processed da pvutils. Execution regular laptop took less 7 seconds.","code":""},{"path":"https://oskargauffin.github.io/pvutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Oskar Gauffin. Maintainer.","code":""},{"path":"https://oskargauffin.github.io/pvutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gauffin O (2023). pvutils: Helpful Functions Pharmacogivilance. R package version 0.0.1, https://oskargauffin.github.io/pvutils/.","code":"@Manual{,   title = {pvutils: Helpful Functions for Pharmacogivilance},   author = {Oskar Gauffin},   year = {2023},   note = {R package version 0.0.1},   url = {https://oskargauffin.github.io/pvutils/}, }"},{"path":[]},{"path":"https://oskargauffin.github.io/pvutils/reference/add_disproportionality.html","id":null,"dir":"Reference","previous_headings":"","what":"Add disproportionality estimates to data frame\nwith expected counts — add_disproportionality","title":"Add disproportionality estimates to data frame\nwith expected counts — add_disproportionality","text":"Add disproportionality estimates data frame expected counts","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/add_disproportionality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add disproportionality estimates to data frame\nwith expected counts — add_disproportionality","text":"","code":"add_disproportionality(   df = NULL,   da_estimators = c(\"ic\", \"prr\", \"ror\"),   rule_of_N = 3,   number_of_digits = 2,   sign_lvl = 0.95 )"},{"path":"https://oskargauffin.github.io/pvutils/reference/add_disproportionality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add disproportionality estimates to data frame\nwith expected counts — add_disproportionality","text":"df Intended use output tibble add_expected_counts. da_estimators Character vector specifying disproportionality estimators use, case need implemented options. Defaults c(\"ic\", \"prr\", \"ror\"). rule_of_N Numeric value. Sets estimates ROR PRR NA observed counts less equal passed value rule_of_N. Default value 3, 5 sometimes liberal alternative. Set NULL want apply rule. number_of_digits Numeric value. Set number digits show output passing integer. Default value 2 digits. Set NULL avoid rounding. sign_lvl Significance level confidence credibility intervals. Default 0.95 (.e. 95 % confidence interval)","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/add_disproportionality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add disproportionality estimates to data frame\nwith expected counts — add_disproportionality","text":"passed data frame disproportionality point interval estimates.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/add_expected_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces expected counts — add_expected_counts","title":"Produces expected counts — add_expected_counts","text":"Produces various counts used disproportionality analysis.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/add_expected_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces expected counts — add_expected_counts","text":"","code":"add_expected_counts(   df = NULL,   expected_count_estimators = c(\"rrr\", \"prr\", \"ror\") )"},{"path":"https://oskargauffin.github.io/pvutils/reference/add_expected_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces expected counts — add_expected_counts","text":"df object possible convert data table, e.g. tibble data.frame, containing patient level reported drug-event-pairs. See details. expected_count_estimators character vector containing desired expected count estimators. Defaults implemented options, .e. c(\"rrr\", \"prr\", \"ror\").","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/add_expected_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces expected counts — add_expected_counts","text":"tibble containing various counts.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/add_expected_counts.html","id":"the-df-object","dir":"Reference","previous_headings":"","what":"The df object","title":"Produces expected counts — add_expected_counts","text":"passed df (convertible ) data table least contain three  columns: report_id, drug event. data table contain one row  per reported drug-event-combination, .e. receiving single additional report  drug X event Y add one row table. single report  contained drug X event Y event Z, two rows added,  report_id drug rows. Column report_id must type  numeric character. Columns drug event must type character.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ci_for_ic.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for Information Component (IC) — ci_for_ic","title":"Confidence intervals for Information Component (IC) — ci_for_ic","text":"Mainly used link{ic}. Produces quantiles posterior gamma distribution. Called twice ic create credibility interval.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ci_for_ic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for Information Component (IC) — ci_for_ic","text":"","code":"ci_for_ic(obs, exp, sign_lvl_probs, shrinkage)"},{"path":"https://oskargauffin.github.io/pvutils/reference/ci_for_ic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for Information Component (IC) — ci_for_ic","text":"obs numeric vector observed counts, .e. number reports selected drug-event-combination. Note shrinkage (e.g. +0.5) added inside function included . exp numeric vector expected counts, .e. number reports expected given comparator background. Note shrinkage (e.g. +0.5) added inside function included . sign_lvl_probs probabilities posterior, based passed significance level (sign_lvl) ic. instance, sgn_lvl = .95 ic used, quantiles extracted sgn_lvl_probs 0.025 0.975. shrinkage non-negative numeric value, added observed expected count. Default 0.5.","code":""},{"path":[]},{"path":"https://oskargauffin.github.io/pvutils/reference/ci_for_prr.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for Proportional Reporting Rate — ci_for_prr","title":"Confidence intervals for Proportional Reporting Rate — ci_for_prr","text":"Mainly use prr. Produces (symmetric, normality based) confidence bounds PRR, passed probability. Called twice prr create confidence intervals.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ci_for_prr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for Proportional Reporting Rate — ci_for_prr","text":"","code":"ci_for_prr(obs, n_drug, n_event_prr, n_tot_prr, sign_lvl_probs)"},{"path":"https://oskargauffin.github.io/pvutils/reference/ci_for_prr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for Proportional Reporting Rate — ci_for_prr","text":"obs Number reports specific drug event (.e. observed count). n_drug Number reports drug, without event n_event_prr Number reports event background. n_tot_prr Number reports background. sign_lvl_probs probabilities normal distribution, based passed significance level (sign_lvl) prr. sgn_lvl = .95 prr, quantiles normal distribution extracted sgn_lvl_probs 0.025 0.975.","code":""},{"path":[]},{"path":"https://oskargauffin.github.io/pvutils/reference/ci_for_ror.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for Reporting Odds Ratio — ci_for_ror","title":"Confidence intervals for Reporting Odds Ratio — ci_for_ror","text":"Mainly use ror. Produces (symmetric, normality based) confidence bounds ROR, passed probability. Called twice ror create confidence intervals.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ci_for_ror.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for Reporting Odds Ratio — ci_for_ror","text":"","code":"ci_for_ror(a, b, c, d, sign_lvl_probs)"},{"path":"https://oskargauffin.github.io/pvutils/reference/ci_for_ror.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for Reporting Odds Ratio — ci_for_ror","text":"Number reports specific drug event (.e. observed count). b Number reports drug, without event c Number reports without drug, event d Number reports without drug, without event sign_lvl_probs probabilities normal distribution, based passed significance level (sign_lvl) ror. sgn_lvl = .95 ror, quantiles normal distribution extracted sgn_lvl_probs 0.025 0.975.","code":""},{"path":[]},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_prr.html","id":null,"dir":"Reference","previous_headings":"","what":"Count expected for Proportional Reporting Rate — count_expected_prr","title":"Count expected for Proportional Reporting Rate — count_expected_prr","text":"Internal function provide expected counts related PRR","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_prr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count expected for Proportional Reporting Rate — count_expected_prr","text":"","code":"count_expected_prr(count_dt)"},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_prr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count expected for Proportional Reporting Rate — count_expected_prr","text":"count_dt data table, output count_expected_rrr","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_prr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count expected for Proportional Reporting Rate — count_expected_prr","text":"data table added columns n_event_prr n_tot_prr expected_prr","code":""},{"path":[]},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_ror.html","id":null,"dir":"Reference","previous_headings":"","what":"Count expected for Reporting Odds Ratio — count_expected_ror","title":"Count expected for Reporting Odds Ratio — count_expected_ror","text":"Internal function provide expected counts related ROR","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_ror.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count expected for Reporting Odds Ratio — count_expected_ror","text":"","code":"count_expected_ror(count_dt)"},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_ror.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count expected for Reporting Odds Ratio — count_expected_ror","text":"count_dt data table, output count_expected_rrr","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_ror.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count expected for Reporting Odds Ratio — count_expected_ror","text":"data table added columns n_event_prr, n_tot_prr expected_prr OUTPUT_DESCRIPTION","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_ror.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count expected for Reporting Odds Ratio — count_expected_ror","text":"DETAILS","code":""},{"path":[]},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_rrr.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Expected for Relative Reporting Rate — count_expected_rrr","title":"Count Expected for Relative Reporting Rate — count_expected_rrr","text":"Internal function provide expected counts related RRR","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_rrr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Expected for Relative Reporting Rate — count_expected_rrr","text":"","code":"count_expected_rrr(df)"},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_rrr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Expected for Relative Reporting Rate — count_expected_rrr","text":"df See documentation add_expected_counts","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/count_expected_rrr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Expected for Relative Reporting Rate — count_expected_rrr","text":"data frame columns obs, n_drug, n_event, n_tot (RRR) expected","code":""},{"path":[]},{"path":"https://oskargauffin.github.io/pvutils/reference/custom_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Get custom colours — custom_colours","title":"Get custom colours — custom_colours","text":"far, function provides hex codes blue green \"Uppsala Monitoring Centre - style\"","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/custom_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get custom colours — custom_colours","text":"","code":"custom_colours(colour = c(\"blue\", \"green\"))"},{"path":"https://oskargauffin.github.io/pvutils/reference/custom_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get custom colours — custom_colours","text":"colour character string, must either \"blue\" \"green\".","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/custom_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get custom colours — custom_colours","text":"hex code string.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/custom_colours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get custom colours — custom_colours","text":"","code":"par(lwd = 5) hist(runif(30),   col = pvutils::custom_colours(\"blue\"),   border = pvutils::custom_colours(\"green\") )"},{"path":"https://oskargauffin.github.io/pvutils/reference/custom_ggtheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add custom colour theme — custom_ggtheme","title":"Add custom colour theme — custom_ggtheme","text":"function provides custom colour ggplot2-theme blue green \"Uppsala Monitoring Centre - style\"","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/custom_ggtheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add custom colour theme — custom_ggtheme","text":"","code":"custom_ggtheme()"},{"path":"https://oskargauffin.github.io/pvutils/reference/custom_ggtheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add custom colour theme — custom_ggtheme","text":"None","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/custom_ggtheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add custom colour theme — custom_ggtheme","text":"","code":"library(\"ggplot2\") ggplot(mtcars, aes(mpg, disp)) +   geom_point() +   pvutils::custom_ggtheme()"},{"path":"https://oskargauffin.github.io/pvutils/reference/da.html","id":null,"dir":"Reference","previous_headings":"","what":"Disproportionality Analysis — da","title":"Disproportionality Analysis — da","text":"da used execute disproportionality analysis, potentially across subgroups (see parameter group_by), using Information Component (IC), Proportional Reporting Rate (PRR) /Reporting Odds Ratio (ROR).","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disproportionality Analysis — da","text":"","code":"da(   df = NULL,   da_estimators = c(\"ic\", \"prr\", \"ror\"),   group_by = NULL,   rule_of_N = 3,   sign_lvl = 0.95,   number_of_digits = 2,   excel_path = NULL )"},{"path":"https://oskargauffin.github.io/pvutils/reference/da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disproportionality Analysis — da","text":"df object possible convert data table, e.g. tibble data.frame, containing patient level reported drug-event-pairs. See details. da_estimators Character vector specifying disproportionality estimators use, case need implemented options. Defaults c(\"ic\", \"prr\", \"ror\"). group_by Provide string name grouping variable `df` perform subgroup analyses (.e. run disproportionality analysis within group). Passing NULL, default, uses data df single group. rule_of_N Numeric value. Sets estimates ROR PRR NA observed counts less equal passed value rule_of_N. Default value 3, 5 sometimes liberal alternative. Set NULL want apply rule. sign_lvl Significance level confidence credibility intervals. Default 0.95 (.e. 95 % confidence interval) number_of_digits Numeric value. Set number digits show output passing integer. Default value 2 digits. Set NULL avoid rounding. excel_path write output da excel file, provide path folder e.g. write current working directory, pass getwd().  excel file default named da.xlsx. control excel file name,  pass path ending desired filename suffixed .xlsx.  want export output excel file, pass NULL (default).","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disproportionality Analysis — da","text":"da returns data frame (invisibly) containing counts estimates related supported disproportionality estimators. row corresponds drug-event pair.","code":""},{"path":[]},{"path":"https://oskargauffin.github.io/pvutils/reference/da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disproportionality Analysis — da","text":"","code":"### Run a disproportionality analysis da_1 <- drug_event_df |> da()  ### Run a disproportionality across two subgroups # Create two groups (even/uneven report_ids) in drug_event_df drug_event_df_with_grouping  <- drug_event_df |> dplyr::mutate(\"group\" = report_id %% 2)  # Execute da across the subgroups da_2 <- drug_event_df_with_grouping |> da(group_by = \"group\")"},{"path":"https://oskargauffin.github.io/pvutils/reference/drug_event_df.html","id":null,"dir":"Reference","previous_headings":"","what":"A simulated ICSR database — drug_event_df","title":"A simulated ICSR database — drug_event_df","text":"drug_event_df contains report_ids drugs events. can use package tools arrive instance observed counts disproportionality analysis-estimates.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/drug_event_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simulated ICSR database — drug_event_df","text":"","code":"drug_event_df"},{"path":"https://oskargauffin.github.io/pvutils/reference/drug_event_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A simulated ICSR database — drug_event_df","text":"`drug_event_df` data frame 3,971 rows 3 columns. total 1000 unique report_ids, .e. report_id can several drugs events. Number drugs per report_id sampled 1 + Pois(3), increasing probability drug letter closes Z. Every drug assigned event, decreasing probability event index number increases towards 1000. See DATASET.R file data-raw folder details. report_id patient report identifier drug One 26 fake drugs (Drug_A - Drug_Z) event Sampled events (Event_1 - Event_1000)","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/drug_event_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A simulated ICSR database — drug_event_df","text":"Simulated data.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ic.html","id":null,"dir":"Reference","previous_headings":"","what":"Information component — ic","title":"Information component — ic","text":"Calculates information component (\"IC\") credibility interval, used disproportionality analysis.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information component — ic","text":"","code":"ic(obs, exp, shrinkage = 0.5, sign_lvl = 0.95)"},{"path":"https://oskargauffin.github.io/pvutils/reference/ic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information component — ic","text":"obs numeric vector observed counts, .e. number reports selected drug-event-combination. Note shrinkage (e.g. +0.5) added inside function included . exp numeric vector expected counts, .e. number reports expected given comparator background. Note shrinkage (e.g. +0.5) added inside function included . shrinkage non-negative numeric value, added observed expected count. Default 0.5. sign_lvl Significance level confidence credibility intervals. Default 0.95 (.e. 95 % confidence interval)","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information component — ic","text":"tibble three columns (point estimate credibility bounds).","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Information component — ic","text":"IC log2-transformed observed--expected ratio, based relative reporting rate (RRR) counts, modified addition \"shrinkage\" protect spurious associations. $$\\hat{IC} = log_{2}(\\frac{\\hat{O}+k}{\\hat{E}+k})$$ \\(\\hat{O}\\) = observed number reports, \\(k\\) shrinkage (typically +0.5), expected \\(\\hat{E}\\) (RRR, using entire database comparator background) estimated $$ \\hat{E} = \\frac{N_{drug} \\times N_{event}}{N_{TOT}}$$ µ \\(N_{drug}\\), \\(N_{event}\\) \\(N_{TOT}\\) number reports drug, event, whole database respectively.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ic.html","id":"further-details","dir":"Reference","previous_headings":"","what":"Further details","title":"Information component — ic","text":"bayesian point--view, credibility interval IC constructed poisson-gamma conjugacy. shrinkage constitutes prior observed expected 0.5. shrinkage +0.5 gamma-quantile based 95 % credibility interval lower bound 0 unless observed count exceeds 3. One benefit \\(log_{2}\\) provide log-scale convenient plotting multiple IC values side--side.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information component — ic","text":"","code":"ic(obs = 20, exp = 10) #> # A tibble: 1 × 3 #>   ic_lower    ic ic_upper #>      <dbl> <dbl>    <dbl> #> 1    0.264 0.965     1.53  # Note that obs and exp can be vectors (of equal length, no recycling allowed) ic(obs = c(20, 30), exp = c(10, 10)) #> # A tibble: 2 × 3 #>   ic_lower    ic ic_upper #>      <dbl> <dbl>    <dbl> #> 1    0.264 0.965     1.53 #> 2    0.976 1.54      2.01"},{"path":"https://oskargauffin.github.io/pvutils/reference/prr.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportional Reporting Rate — prr","title":"Proportional Reporting Rate — prr","text":"Calculates Proportional Reporting Rate (\"PRR\") confidence intervals, used disproportionality analysis.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/prr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportional Reporting Rate — prr","text":"","code":"prr(obs, n_drug, n_event_prr, n_tot_prr, sign_lvl = 0.95)"},{"path":"https://oskargauffin.github.io/pvutils/reference/prr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportional Reporting Rate — prr","text":"obs Number reports specific drug event (.e. observed count). n_drug Number reports drug, without event n_event_prr Number reports event background. n_tot_prr Number reports background. sign_lvl Significance level confidence credibility intervals. Default 0.95 (.e. 95 % confidence interval)","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/prr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportional Reporting Rate — prr","text":"tibble three columns (point estimate credibility bounds). Number rows equals length inputs obs, n_drug, n_event_prr n_tot_prr.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/prr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Proportional Reporting Rate — prr","text":"PRR proportion reports event set exposed cases, divided proportion reports event background comparator, include exposed. Reporting highlights correct interpretation, examining reporting PRR calculated reporting database. Note: function vectorized, see examples.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/prr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proportional Reporting Rate — prr","text":"","code":"pvutils::prr(obs = 5, n_drug = 10, n_event_prr = 20, n_tot_prr = 10000) #> # A tibble: 1 × 3 #>   prr_lower   prr prr_upper #>       <dbl> <dbl>     <dbl> #> 1      78.4 0.001      797.  # Note that input parameters can be vectors (of equal length, no recycling) pvutils::prr(   obs = c(5, 10),   n_drug = c(10, 20),   n_event_prr = c(15, 30),   n_tot_prr = c(10000, 10000) ) #> # A tibble: 2 × 3 #>   prr_lower     prr prr_upper #>       <dbl>   <dbl>     <dbl> #> 1     102.  0.00075     1092. #> 2      72.0 0.0015       386."},{"path":"https://oskargauffin.github.io/pvutils/reference/ror.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting Odds Ratio — ror","title":"Reporting Odds Ratio — ror","text":"Calculates Reporting Odds Ratio (\"ROR\") confidence intervals, used disproportionality analysis.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ror.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporting Odds Ratio — ror","text":"","code":"ror(a, b, c, d, sign_lvl = 0.95)"},{"path":"https://oskargauffin.github.io/pvutils/reference/ror.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporting Odds Ratio — ror","text":"Number reports specific drug event (.e. observed count). b Number reports drug, without event c Number reports without drug, event d Number reports without drug, without event sign_lvl Significance level confidence credibility intervals. Default 0.95 (.e. 95 % confidence interval)","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ror.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reporting Odds Ratio — ror","text":"tibble three columns (point estimate credibility bounds). Number rows equals length inputs , b, c, d.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ror.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reporting Odds Ratio — ror","text":"ROR odds ratio calculated reporting counts. R Reporting ROR meant emphasize interpretation reporting, ROR calculated reporting database. Note: function vectorized, .e. , b, c d can vectors, see examples.","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/ror.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporting Odds Ratio — ror","text":"","code":"pvutils::ror(a = 5, b = 10, c = 20, d = 10000) #> # A tibble: 1 × 3 #>   ror_lower   ror ror_upper #>       <dbl> <dbl>     <dbl> #> 1      78.4   250      797.  # Note that a, b, c and d can be vectors (of equal length, no recycling) pvutils::ror(a = c(5, 10), b = c(10, 20), c = c(15, 30), d = c(10000, 10000)) #> # A tibble: 2 × 3 #>   ror_lower   ror ror_upper #>       <dbl> <dbl>     <dbl> #> 1     102.   333.     1092. #> 2      72.0  167.      386."},{"path":"https://oskargauffin.github.io/pvutils/reference/sign_lvl_to_quantile_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile probabilities from significance level — sign_lvl_to_quantile_prob","title":"Quantile probabilities from significance level — sign_lvl_to_quantile_prob","text":"Calculates equi-tailed quantile probabilities significance level","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/sign_lvl_to_quantile_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile probabilities from significance level — sign_lvl_to_quantile_prob","text":"","code":"sign_lvl_to_quantile_prob(sign_lvl = 0.95)"},{"path":"https://oskargauffin.github.io/pvutils/reference/sign_lvl_to_quantile_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile probabilities from significance level — sign_lvl_to_quantile_prob","text":"sign_lvl Significance level confidence credibility intervals. Default 0.95 (.e. 95 % confidence interval)","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/sign_lvl_to_quantile_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile probabilities from significance level — sign_lvl_to_quantile_prob","text":"list two numerical vectors, \"lower\" \"upper\".","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/sign_lvl_to_quantile_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile probabilities from significance level — sign_lvl_to_quantile_prob","text":"","code":"sign_lvl_to_quantile_prob(0.95) #> $lower #> [1] 0.025 #>  #> $upper #> [1] 0.975 #>"},{"path":"https://oskargauffin.github.io/pvutils/reference/write_to_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to excel — write_to_excel","title":"Write to excel — write_to_excel","text":"Writes output disproportionality analysis excel file","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/write_to_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to excel — write_to_excel","text":"","code":"write_to_excel(df, write_path = NULL)"},{"path":"https://oskargauffin.github.io/pvutils/reference/write_to_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to excel — write_to_excel","text":"df data frame export. See `?da` details. write_path string giving file path","code":""},{"path":"https://oskargauffin.github.io/pvutils/reference/write_to_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write to excel — write_to_excel","text":"Nothing.","code":""}]
